{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ],
    "$_POST": [
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {},
            "core:email": {}
          }
        },
        "name": "email"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:minlength": {
              "param": 9,
              "message": "Please enter at least {0} characters in phone number."
            }
          }
        },
        "name": "phone"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {},
            "core:minlength": {
              "param": 2,
              "message": "Please enter at least {0} characters in first name."
            },
            "core:maxlength": {
              "param": 50,
              "message": "Please enter no more than {0} characters in first name."
            }
          }
        },
        "name": "firstName"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {},
            "core:minlength": {
              "param": 2,
              "message": "Please enter at least {0} characters in last name."
            },
            "core:maxlength": {
              "param": 50,
              "message": "Please enter no more than {0} characters in last name."
            }
          }
        },
        "name": "lastName"
      },
      {
        "type": "number",
        "options": {
          "rules": {
            "core:required": {}
          }
        },
        "name": "roleId"
      },
      {
        "type": "boolean",
        "name": "facility"
      },
      {
        "type": "number",
        "name": "facilityId"
      },
      {
        "type": "boolean",
        "name": "invite"
      },
      {
        "type": "number",
        "name": "id"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {}
          }
        },
        "name": "countryCode"
      }
    ],
    "$_SERVER": [
      {
        "type": "text",
        "name": "HTTP_AUTHORIZATION"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "jwt",
        "module": "core",
        "action": "exec",
        "options": {
          "exec": "utils/verifyJWT",
          "params": {
            "token": "{{$_SERVER.HTTP_AUTHORIZATION}}"
          }
        }
      },
      "lib/utils/messagesHandler",
      {
        "name": "message",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{messageHandler}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "phone",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.phone.replace(/\\D+/g,'')}}"
        },
        "meta": [],
        "output": false,
        "outputType": "text"
      },
      {
        "name": "exists",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "EnyrgyDB",
          "sql": {
            "type": "select",
            "columns": [],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{phone}}",
                "test": ""
              },
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P2",
                "value": "{{$_POST.countryCode}}",
                "test": ""
              }
            ],
            "table": {
              "name": "user"
            },
            "primary": "id",
            "joins": [],
            "query": "select * from \"user\" where \"user\".\"phone\" = ? and \"user\".\"countryCode\" = ?",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "user.phone",
                  "field": "user.phone",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{phone}}",
                  "data": {
                    "table": "user",
                    "column": "phone",
                    "type": "text",
                    "columnObj": {
                      "type": "string",
                      "maxLength": 255,
                      "primary": false,
                      "unique": false,
                      "nullable": true,
                      "name": "phone"
                    }
                  },
                  "operation": "="
                },
                {
                  "id": "user.countryCode",
                  "field": "user.countryCode",
                  "type": "string",
                  "operator": "equal",
                  "value": "{{$_POST.countryCode}}",
                  "data": {
                    "table": "user",
                    "column": "countryCode",
                    "type": "text",
                    "columnObj": {
                      "type": "string",
                      "maxLength": 255,
                      "primary": false,
                      "unique": false,
                      "nullable": true,
                      "name": "countryCode"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            }
          }
        },
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "firstName"
          },
          {
            "type": "text",
            "name": "lastName"
          },
          {
            "type": "text",
            "name": "email"
          },
          {
            "type": "text",
            "name": "verificationCode"
          },
          {
            "type": "datetime",
            "name": "verificationCodeExpire"
          },
          {
            "type": "boolean",
            "name": "disabled"
          },
          {
            "type": "text",
            "name": "phone"
          },
          {
            "type": "number",
            "name": "userIdInvited"
          },
          {
            "type": "datetime",
            "name": "createdAt"
          },
          {
            "type": "datetime",
            "name": "updatedAt"
          },
          {
            "type": "boolean",
            "name": "isTester"
          },
          {
            "type": "boolean",
            "name": "isGodMode"
          },
          {
            "type": "boolean",
            "name": "isDebug"
          },
          {
            "type": "text",
            "name": "countryCode"
          }
        ],
        "outputType": "object",
        "type": "dbconnector_single",
        "output": false
      },
      {
        "name": "userExists",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{exists.id}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "",
        "options": {
          "comment": "get client"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{userExists}}",
          "then": {
            "steps": {
              "name": "client",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "select",
                  "columns": [],
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{exists.id}}",
                      "test": ""
                    }
                  ],
                  "table": {
                    "name": "client"
                  },
                  "primary": "id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "client.userId",
                        "field": "client.userId",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{exists.id}}",
                        "data": {
                          "table": "client",
                          "column": "userId",
                          "type": "number",
                          "columnObj": {
                            "type": "reference",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "references": "id",
                            "inTable": "user",
                            "referenceType": "integer",
                            "onUpdate": "CASCADE",
                            "onDelete": "CASCADE",
                            "name": "userId"
                          }
                        },
                        "operation": "=",
                        "table": "client"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select * from \"client\" where \"client\".\"userId\" = ?"
                }
              },
              "meta": [
                {
                  "type": "number",
                  "name": "id"
                },
                {
                  "type": "text",
                  "name": "height"
                },
                {
                  "type": "text",
                  "name": "weight"
                },
                {
                  "type": "text",
                  "name": "sickDays"
                },
                {
                  "type": "number",
                  "name": "eyeColor"
                },
                {
                  "type": "number",
                  "name": "hairColor"
                },
                {
                  "type": "number",
                  "name": "skinColor"
                },
                {
                  "type": "number",
                  "name": "userId"
                },
                {
                  "type": "text",
                  "name": "birth"
                },
                {
                  "type": "number",
                  "name": "freckles"
                },
                {
                  "type": "number",
                  "name": "sunTooLong"
                },
                {
                  "type": "number",
                  "name": "degreeTurnBrown"
                },
                {
                  "type": "number",
                  "name": "brownSeveralHours"
                },
                {
                  "type": "number",
                  "name": "facialReactionSun"
                },
                {
                  "type": "number",
                  "name": "tanning"
                },
                {
                  "type": "number",
                  "name": "exposedArea"
                },
                {
                  "type": "text",
                  "name": "gender"
                },
                {
                  "type": "datetime",
                  "name": "consentTreatment"
                },
                {
                  "type": "number",
                  "name": "treatments"
                },
                {
                  "type": "text",
                  "name": "customerId"
                },
                {
                  "type": "number",
                  "name": "scoreGeneticDisposition"
                },
                {
                  "type": "number",
                  "name": "scoreReactionSun"
                },
                {
                  "type": "number",
                  "name": "scoreTanningHabits"
                },
                {
                  "type": "number",
                  "name": "skintype"
                },
                {
                  "type": "boolean",
                  "name": "hasFreeTrial"
                },
                {
                  "type": "datetime",
                  "name": "hasFinishedQuestions"
                }
              ],
              "type": "dbconnector_single",
              "outputType": "object"
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "options": {
          "comment": "insert/update user"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{!userExists}}",
          "then": {
            "steps": {
              "name": "insertUser",
              "module": "dbupdater",
              "action": "insert",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "insert",
                  "values": [
                    {
                      "table": "user",
                      "column": "firstName",
                      "type": "text",
                      "value": "{{$_POST.firstName}}"
                    },
                    {
                      "table": "user",
                      "column": "lastName",
                      "type": "text",
                      "value": "{{$_POST.lastName}}"
                    },
                    {
                      "table": "user",
                      "column": "email",
                      "type": "text",
                      "value": "{{$_POST.email.lowercase()}}"
                    },
                    {
                      "table": "user",
                      "column": "disabled",
                      "type": "boolean",
                      "value": "{{false}}"
                    },
                    {
                      "table": "user",
                      "column": "phone",
                      "type": "text",
                      "value": "{{phone}}"
                    },
                    {
                      "table": "user",
                      "column": "createdAt",
                      "type": "datetime",
                      "value": "{{NOW}}"
                    },
                    {
                      "table": "user",
                      "column": "updatedAt",
                      "type": "datetime",
                      "value": "{{NOW}}"
                    },
                    {
                      "table": "user",
                      "column": "countryCode",
                      "type": "text",
                      "value": "{{$_POST.countryCode}}"
                    }
                  ],
                  "table": "user",
                  "returning": "id",
                  "query": "insert into \"user\" (\"countryCode\", \"createdAt\", \"disabled\", \"email\", \"firstName\", \"lastName\", \"phone\", \"updatedAt\") values (?, ?, ?, ?, ?, ?, ?, ?) returning \"id\"",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.firstName}}",
                      "test": ""
                    },
                    {
                      "name": ":P2",
                      "type": "expression",
                      "value": "{{$_POST.lastName}}",
                      "test": ""
                    },
                    {
                      "name": ":P3",
                      "type": "expression",
                      "value": "{{$_POST.email.lowercase()}}",
                      "test": ""
                    },
                    {
                      "name": ":P4",
                      "type": "expression",
                      "value": "{{false}}",
                      "test": ""
                    },
                    {
                      "name": ":P5",
                      "type": "expression",
                      "value": "{{phone}}",
                      "test": ""
                    },
                    {
                      "name": ":P6",
                      "type": "expression",
                      "value": "{{NOW}}",
                      "test": ""
                    },
                    {
                      "name": ":P7",
                      "type": "expression",
                      "value": "{{NOW}}",
                      "test": ""
                    },
                    {
                      "name": ":P8",
                      "type": "expression",
                      "value": "{{$_POST.countryCode}}",
                      "test": ""
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "identity",
                  "type": "text"
                },
                {
                  "name": "affected",
                  "type": "number"
                }
              ],
              "output": false
            }
          },
          "else": {
            "steps": {
              "name": "updateUser",
              "module": "dbupdater",
              "action": "update",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "update",
                  "values": [
                    {
                      "table": "user",
                      "column": "firstName",
                      "type": "text",
                      "value": "{{$_POST.firstName}}"
                    },
                    {
                      "table": "user",
                      "column": "lastName",
                      "type": "text",
                      "value": "{{$_POST.lastName}}"
                    },
                    {
                      "table": "user",
                      "column": "email",
                      "type": "text",
                      "value": "{{$_POST.email.lowercase()}}"
                    }
                  ],
                  "table": "user",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "id",
                        "field": "id",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{exists.id}}",
                        "data": {
                          "column": "id"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "returning": "id",
                  "query": "update \"user\" set \"firstName\" = ?, \"lastName\" = ?, \"email\" = ? where \"id\" = ? returning \"id\"",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.firstName}}",
                      "test": ""
                    },
                    {
                      "name": ":P2",
                      "type": "expression",
                      "value": "{{$_POST.lastName}}",
                      "test": ""
                    },
                    {
                      "name": ":P3",
                      "type": "expression",
                      "value": "{{$_POST.email.lowercase()}}",
                      "test": ""
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P4",
                      "value": "{{exists.id}}",
                      "test": ""
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "options": {
          "comment": "insert/update detailsUser"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{!userExists}}",
          "then": {
            "steps": {
              "name": "insertDetailsUser",
              "module": "dbupdater",
              "action": "insert",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "insert",
                  "values": [
                    {
                      "table": "detailsUser",
                      "column": "rolesId",
                      "type": "number",
                      "value": "{{$_POST.roleId}}"
                    },
                    {
                      "table": "detailsUser",
                      "column": "createdAt",
                      "type": "datetime",
                      "value": "{{NOW}}"
                    },
                    {
                      "table": "detailsUser",
                      "column": "updatedAt",
                      "type": "datetime",
                      "value": "{{NOW}}"
                    },
                    {
                      "table": "detailsUser",
                      "column": "userId",
                      "type": "number",
                      "value": "{{insertUser.identity}}"
                    }
                  ],
                  "table": "detailsUser",
                  "returning": "id",
                  "query": "insert into \"detailsUser\" (\"createdAt\", \"rolesId\", \"updatedAt\", \"userId\") values (?, ?, ?, ?) returning \"id\"",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.roleId}}",
                      "test": ""
                    },
                    {
                      "name": ":P2",
                      "type": "expression",
                      "value": "{{NOW}}",
                      "test": ""
                    },
                    {
                      "name": ":P3",
                      "type": "expression",
                      "value": "{{NOW}}",
                      "test": ""
                    },
                    {
                      "name": ":P4",
                      "type": "expression",
                      "value": "{{insertUser.identity}}",
                      "test": ""
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "identity",
                  "type": "text"
                },
                {
                  "name": "affected",
                  "type": "number"
                }
              ],
              "output": false
            }
          },
          "else": {
            "steps": {
              "name": "updateDetailsUser",
              "module": "dbupdater",
              "action": "update",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "update",
                  "values": [
                    {
                      "table": "detailsUser",
                      "column": "rolesId",
                      "type": "number",
                      "value": "{{$_POST.roleId}}"
                    }
                  ],
                  "table": "detailsUser",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "userId",
                        "field": "userId",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{exists.id}}",
                        "data": {
                          "column": "userId"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "returning": "id",
                  "query": "update \"detailsUser\" set \"rolesId\" = ? where \"userId\" = ? returning \"id\"",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.roleId}}",
                      "test": ""
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P2",
                      "value": "{{exists.id}}",
                      "test": ""
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "roleUser",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "EnyrgyDB",
          "sql": {
            "type": "select",
            "columns": [],
            "params": [
              {
                "operator": "equal",
                "type": "expression",
                "name": ":P1",
                "value": "{{$_POST.roleId}}",
                "test": ""
              }
            ],
            "table": {
              "name": "roles"
            },
            "primary": "id",
            "joins": [],
            "query": "select * from \"roles\" where \"roles\".\"id\" = ?",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "roles.id",
                  "field": "roles.id",
                  "type": "double",
                  "operator": "equal",
                  "value": "{{$_POST.roleId}}",
                  "data": {
                    "table": "roles",
                    "column": "id",
                    "type": "number",
                    "columnObj": {
                      "type": "increments",
                      "default": "",
                      "primary": true,
                      "unique": true,
                      "nullable": false,
                      "name": "id"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            }
          }
        },
        "output": false,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "name"
          },
          {
            "type": "datetime",
            "name": "createdAt"
          },
          {
            "type": "datetime",
            "name": "updatedAt"
          },
          {
            "type": "boolean",
            "name": "sendEmail"
          },
          {
            "type": "boolean",
            "name": "sendSMS"
          },
          {
            "type": "boolean",
            "name": "users"
          },
          {
            "type": "boolean",
            "name": "packages"
          },
          {
            "type": "boolean",
            "name": "devices"
          },
          {
            "type": "boolean",
            "name": "clients"
          },
          {
            "type": "boolean",
            "name": "adminView"
          },
          {
            "type": "text",
            "name": "description"
          },
          {
            "type": "boolean",
            "name": "facilities"
          },
          {
            "type": "boolean",
            "name": "profile"
          },
          {
            "type": "boolean",
            "name": "mobileView"
          },
          {
            "type": "boolean",
            "name": "facilityView"
          }
        ],
        "type": "dbconnector_single",
        "outputType": "object"
      },
      {
        "name": "",
        "options": {
          "comment": "create user-facility relation if register comes from the facility page"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{userExists}}",
          "then": {
            "steps": {
              "name": "deleteDetailsUsersFacility",
              "module": "dbupdater",
              "action": "delete",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "delete",
                  "table": "detailsUsersFacility",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "userId",
                        "field": "userId",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{exists.id}}",
                        "data": {
                          "column": "userId"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "returning": "id",
                  "query": "delete from \"detailsUsersFacility\" where \"userId\" = ?",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{exists.id}}",
                      "test": ""
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.facility}}",
          "then": {
            "steps": {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{!userExists}}",
                "then": {
                  "steps": {
                    "name": "insertDetailsUsersFacility",
                    "module": "dbupdater",
                    "action": "insert",
                    "options": {
                      "connection": "EnyrgyDB",
                      "sql": {
                        "type": "insert",
                        "values": [
                          {
                            "table": "detailsUsersFacility",
                            "column": "userId",
                            "type": "number",
                            "value": "{{insertUser.identity}}"
                          },
                          {
                            "table": "detailsUsersFacility",
                            "column": "facilityId",
                            "type": "number",
                            "value": "{{$_POST.facilityId}}"
                          },
                          {
                            "table": "detailsUsersFacility",
                            "column": "createdAt",
                            "type": "datetime",
                            "value": "{{NOW}}"
                          },
                          {
                            "table": "detailsUsersFacility",
                            "column": "updatedAt",
                            "type": "datetime",
                            "value": "{{NOW}}"
                          }
                        ],
                        "table": "detailsUsersFacility",
                        "returning": "id",
                        "query": "insert into \"detailsUsersFacility\" (\"createdAt\", \"facilityId\", \"updatedAt\", \"userId\") values (?, ?, ?, ?)",
                        "params": [
                          {
                            "name": ":P1",
                            "type": "expression",
                            "value": "{{insertUser.identity}}",
                            "test": ""
                          },
                          {
                            "name": ":P2",
                            "type": "expression",
                            "value": "{{$_POST.facilityId}}",
                            "test": ""
                          },
                          {
                            "name": ":P3",
                            "type": "expression",
                            "value": "{{NOW}}",
                            "test": ""
                          },
                          {
                            "name": ":P4",
                            "type": "expression",
                            "value": "{{NOW}}",
                            "test": ""
                          }
                        ]
                      }
                    },
                    "meta": [
                      {
                        "name": "identity",
                        "type": "text"
                      },
                      {
                        "name": "affected",
                        "type": "number"
                      }
                    ]
                  }
                },
                "else": {
                  "steps": {
                    "name": "insertDetailsUsersFacility",
                    "module": "dbupdater",
                    "action": "insert",
                    "options": {
                      "connection": "EnyrgyDB",
                      "sql": {
                        "type": "insert",
                        "values": [
                          {
                            "table": "detailsUsersFacility",
                            "column": "userId",
                            "type": "number",
                            "value": "{{exists.id}}"
                          },
                          {
                            "table": "detailsUsersFacility",
                            "column": "facilityId",
                            "type": "number",
                            "value": "{{$_POST.facilityId}}"
                          },
                          {
                            "table": "detailsUsersFacility",
                            "column": "createdAt",
                            "type": "datetime",
                            "value": "{{NOW}}"
                          },
                          {
                            "table": "detailsUsersFacility",
                            "column": "updatedAt",
                            "type": "datetime",
                            "value": "{{NOW}}"
                          }
                        ],
                        "table": "detailsUsersFacility",
                        "returning": "id",
                        "query": "insert into \"detailsUsersFacility\" (\"createdAt\", \"facilityId\", \"updatedAt\", \"userId\") values (?, ?, ?, ?) returning \"id\"",
                        "params": [
                          {
                            "name": ":P1",
                            "type": "expression",
                            "value": "{{exists.id}}",
                            "test": ""
                          },
                          {
                            "name": ":P2",
                            "type": "expression",
                            "value": "{{$_POST.facilityId}}",
                            "test": ""
                          },
                          {
                            "name": ":P3",
                            "type": "expression",
                            "value": "{{NOW}}",
                            "test": ""
                          },
                          {
                            "name": ":P4",
                            "type": "expression",
                            "value": "{{NOW}}",
                            "test": ""
                          }
                        ]
                      }
                    },
                    "meta": [
                      {
                        "name": "identity",
                        "type": "text"
                      },
                      {
                        "name": "affected",
                        "type": "number"
                      }
                    ]
                  }
                }
              },
              "outputType": "boolean"
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "options": {
          "comment": "send invite if required"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.invite}}",
          "then": {
            "steps": [
              {
                "name": "",
                "module": "core",
                "action": "condition",
                "options": {
                  "if": "{{$_POST.facility}}",
                  "then": {
                    "steps": [
                      {
                        "name": "facility",
                        "module": "dbconnector",
                        "action": "single",
                        "options": {
                          "connection": "EnyrgyDB",
                          "sql": {
                            "type": "select",
                            "columns": [
                              {
                                "table": "facility",
                                "column": "name"
                              }
                            ],
                            "params": [
                              {
                                "operator": "equal",
                                "type": "expression",
                                "name": ":P1",
                                "value": "{{$_POST.facilityId}}",
                                "test": "26"
                              }
                            ],
                            "table": {
                              "name": "facility"
                            },
                            "primary": "id",
                            "joins": [],
                            "wheres": {
                              "condition": "AND",
                              "rules": [
                                {
                                  "id": "facility.id",
                                  "field": "facility.id",
                                  "type": "double",
                                  "operator": "equal",
                                  "value": "{{$_POST.facilityId}}",
                                  "data": {
                                    "table": "facility",
                                    "column": "id",
                                    "type": "number",
                                    "columnObj": {
                                      "type": "increments",
                                      "default": "",
                                      "primary": true,
                                      "unique": true,
                                      "nullable": false,
                                      "name": "id"
                                    }
                                  },
                                  "operation": "="
                                }
                              ],
                              "conditional": null,
                              "valid": true
                            },
                            "query": "select \"name\" from \"facility\" where \"facility\".\"id\" = ?"
                          }
                        },
                        "output": false,
                        "meta": [
                          {
                            "type": "text",
                            "name": "name"
                          }
                        ],
                        "outputType": "object"
                      },
                      {
                        "name": "invite",
                        "module": "api",
                        "action": "send",
                        "options": {
                          "url": "{{$_ENV.HOST+'/api/auth/invitation'}}",
                          "method": "POST",
                          "data": {
                            "userId": "{{insertUser.identity}}",
                            "facilityName": "{{facility.name}}"
                          },
                          "headers": {
                            "authorization": "{{$_SERVER.HTTP_AUTHORIZATION}}"
                          }
                        },
                        "output": false
                      }
                    ]
                  },
                  "else": {
                    "steps": {
                      "name": "invite",
                      "module": "api",
                      "action": "send",
                      "options": {
                        "url": "{{$_ENV.HOST+'/api/auth/invitation'}}",
                        "method": "POST",
                        "data": {
                          "userId": "{{insertUser.identity}}"
                        },
                        "headers": {
                          "authorization": "{{$_SERVER.HTTP_AUTHORIZATION}}"
                        }
                      },
                      "output": false
                    }
                  }
                },
                "outputType": "boolean"
              },
              {
                "name": "updateInviteUser",
                "module": "dbupdater",
                "action": "update",
                "options": {
                  "connection": "EnyrgyDB",
                  "sql": {
                    "type": "update",
                    "values": [
                      {
                        "table": "user",
                        "column": "userIdInvited",
                        "type": "number",
                        "value": "{{jwt.userId}}"
                      },
                      {
                        "table": "user",
                        "column": "updatedAt",
                        "type": "datetime",
                        "value": "{{NOW}}"
                      }
                    ],
                    "table": "user",
                    "wheres": {
                      "condition": "AND",
                      "rules": [
                        {
                          "id": "id",
                          "field": "id",
                          "type": "double",
                          "operator": "equal",
                          "value": "{{insertUser.identity}}",
                          "data": {
                            "column": "id"
                          },
                          "operation": "="
                        }
                      ],
                      "conditional": null,
                      "valid": true
                    },
                    "returning": "id",
                    "query": "update \"user\" set \"userIdInvited\" = ?, \"updatedAt\" = ? where \"id\" = ?",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{jwt.userId}}",
                        "test": ""
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{NOW}}",
                        "test": ""
                      },
                      {
                        "operator": "equal",
                        "type": "expression",
                        "name": ":P3",
                        "value": "{{insertUser.identity}}",
                        "test": ""
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ]
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "options": {
          "comment": "create stripe customer and insert client\n"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{!userExists}}",
          "then": {
            "steps": [
              {
                "name": "createCustomer",
                "module": "core",
                "action": "exec",
                "options": {
                  "exec": "stripe/customer/create",
                  "params": {
                    "phone": "{{$_POST.phone}}",
                    "email": "{{$_POST.email}}",
                    "name": "{{$_POST.firstName+' '+$_POST.lastName}}"
                  }
                }
              },
              {
                "name": "customerId",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{createCustomer.createCustomer.id}}"
                },
                "meta": [],
                "outputType": "text"
              },
              {
                "name": "insertClient",
                "module": "dbupdater",
                "action": "insert",
                "options": {
                  "connection": "EnyrgyDB",
                  "sql": {
                    "type": "insert",
                    "values": [
                      {
                        "table": "client",
                        "column": "userId",
                        "type": "number",
                        "value": "{{insertUser.identity}}"
                      },
                      {
                        "table": "client",
                        "column": "customerId",
                        "type": "text",
                        "value": "{{customerId}}"
                      }
                    ],
                    "table": "client",
                    "returning": "id",
                    "query": "insert into \"client\" (\"customerId\", \"userId\") values (?, ?) returning \"id\"",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{insertUser.identity}}",
                        "test": ""
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{customerId}}",
                        "test": ""
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "identity",
                    "type": "text"
                  },
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "else": {
            "steps": {
              "name": "customerId",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "{{client.customerId}}"
              },
              "meta": [],
              "outputType": "text"
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "options": {
          "comment": "assign plan and create stripe subscription"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{roleUser.name=='adminFacility'||roleUser.name=='ownerFacility'||roleUser.name=='facilitatorFacility'}}",
          "then": {
            "steps": {
              "name": "planEmployee",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "select",
                  "columns": [],
                  "params": [],
                  "table": {
                    "name": "plans"
                  },
                  "primary": "id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "plans.amount",
                        "field": "plans.amount",
                        "type": "string",
                        "operator": "equal",
                        "value": "0.00",
                        "data": {
                          "table": "plans",
                          "column": "amount",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": 255,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "amount"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "plans.productId",
                        "field": "plans.productId",
                        "type": "string",
                        "operator": "not_equal",
                        "value": "''",
                        "data": {
                          "table": "plans",
                          "column": "productId",
                          "type": "text",
                          "columnObj": {
                            "type": "text",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "productId"
                          }
                        },
                        "operation": "<>"
                      },
                      {
                        "id": "plans.active",
                        "field": "plans.active",
                        "type": "boolean",
                        "operator": "equal",
                        "value": true,
                        "data": {
                          "table": "plans",
                          "column": "active",
                          "type": "boolean",
                          "columnObj": {
                            "type": "boolean",
                            "default": "true",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "active"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "plans.name",
                        "field": "plans.name",
                        "type": "string",
                        "operator": "equal",
                        "value": "Employee Facility",
                        "data": {
                          "table": "plans",
                          "column": "name",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": 255,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "name"
                          }
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select * from \"plans\" where \"plans\".\"amount\" = ? and \"plans\".\"productId\" <> ? and \"plans\".\"active\" = ? and \"plans\".\"name\" = ?"
                }
              },
              "meta": [
                {
                  "type": "number",
                  "name": "id"
                },
                {
                  "type": "text",
                  "name": "name"
                },
                {
                  "type": "text",
                  "name": "amount"
                },
                {
                  "type": "text",
                  "name": "limitSessions"
                },
                {
                  "type": "datetime",
                  "name": "createdAt"
                },
                {
                  "type": "datetime",
                  "name": "updatedAt"
                },
                {
                  "type": "text",
                  "name": "productId"
                },
                {
                  "type": "boolean",
                  "name": "active"
                },
                {
                  "type": "text",
                  "name": "description"
                }
              ],
              "type": "dbconnector_single",
              "outputType": "object"
            }
          },
          "else": {
            "steps": {
              "name": "planEmployee",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "EnyrgyDB",
                "sql": {
                  "type": "select",
                  "columns": [],
                  "params": [],
                  "table": {
                    "name": "plans"
                  },
                  "primary": "id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "plans.amount",
                        "field": "plans.amount",
                        "type": "string",
                        "operator": "equal",
                        "value": "0.00",
                        "data": {
                          "table": "plans",
                          "column": "amount",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": 255,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "amount"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "plans.productId",
                        "field": "plans.productId",
                        "type": "string",
                        "operator": "not_equal",
                        "value": "''",
                        "data": {
                          "table": "plans",
                          "column": "productId",
                          "type": "text",
                          "columnObj": {
                            "type": "text",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "productId"
                          }
                        },
                        "operation": "<>"
                      },
                      {
                        "id": "plans.active",
                        "field": "plans.active",
                        "type": "boolean",
                        "operator": "equal",
                        "value": true,
                        "data": {
                          "table": "plans",
                          "column": "active",
                          "type": "boolean",
                          "columnObj": {
                            "type": "boolean",
                            "default": "true",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "active"
                          }
                        },
                        "operation": "="
                      },
                      {
                        "id": "plans.name",
                        "field": "plans.name",
                        "type": "string",
                        "operator": "equal",
                        "value": "Employee Enyrgy",
                        "data": {
                          "table": "plans",
                          "column": "name",
                          "type": "text",
                          "columnObj": {
                            "type": "string",
                            "maxLength": 255,
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "name"
                          }
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select * from \"plans\" where \"plans\".\"amount\" = ? and \"plans\".\"productId\" <> ? and \"plans\".\"active\" = ? and \"plans\".\"name\" = ?"
                }
              },
              "meta": [
                {
                  "type": "number",
                  "name": "id"
                },
                {
                  "type": "text",
                  "name": "name"
                },
                {
                  "type": "text",
                  "name": "amount"
                },
                {
                  "type": "text",
                  "name": "limitSessions"
                },
                {
                  "type": "datetime",
                  "name": "createdAt"
                },
                {
                  "type": "datetime",
                  "name": "updatedAt"
                },
                {
                  "type": "text",
                  "name": "productId"
                },
                {
                  "type": "boolean",
                  "name": "active"
                },
                {
                  "type": "text",
                  "name": "description"
                }
              ],
              "type": "dbconnector_single",
              "outputType": "object"
            }
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{planEmployee.id}}",
          "then": {
            "steps": [
              {
                "name": "createPlanEmployee",
                "module": "core",
                "action": "exec",
                "options": {
                  "exec": "stripe/subscriptions/create",
                  "params": {
                    "customerId": "{{customerId}}",
                    "productId": "{{planEmployee.productId}}"
                  }
                }
              },
              {
                "name": "subscriptionId",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{createPlanEmployee.createSubscription.data.id}}"
                },
                "meta": [],
                "outputType": "text"
              },
              {
                "name": "",
                "module": "core",
                "action": "condition",
                "options": {
                  "if": "{{!userExists}}",
                  "then": {
                    "steps": [
                      {
                        "name": "insertDetailsPayment",
                        "module": "dbupdater",
                        "action": "insert",
                        "options": {
                          "connection": "EnyrgyDB",
                          "sql": {
                            "type": "insert",
                            "values": [
                              {
                                "table": "detailsPayment",
                                "column": "status",
                                "type": "text",
                                "value": "{{createPlanEmployee.createSubscription.data.status}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "clientId",
                                "type": "number",
                                "value": "{{insertClient.identity}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "subscriptionStripeId",
                                "type": "text",
                                "value": "{{subscriptionId}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "createdAt",
                                "type": "datetime",
                                "value": "{{NOW}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "updatedAt",
                                "type": "datetime",
                                "value": "{{NOW}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "planId",
                                "type": "number",
                                "value": "{{planEmployee.id}}"
                              }
                            ],
                            "table": "detailsPayment",
                            "returning": "id",
                            "query": "insert into \"detailsPayment\" (\"clientId\", \"createdAt\", \"planId\", \"status\", \"subscriptionStripeId\", \"updatedAt\") values (?, ?, ?, ?, ?, ?) returning \"id\"",
                            "params": [
                              {
                                "name": ":P1",
                                "type": "expression",
                                "value": "{{createPlanEmployee.createSubscription.data.status}}",
                                "test": ""
                              },
                              {
                                "name": ":P2",
                                "type": "expression",
                                "value": "{{insertClient.identity}}",
                                "test": ""
                              },
                              {
                                "name": ":P3",
                                "type": "expression",
                                "value": "{{subscriptionId}}",
                                "test": ""
                              },
                              {
                                "name": ":P4",
                                "type": "expression",
                                "value": "{{NOW}}",
                                "test": ""
                              },
                              {
                                "name": ":P5",
                                "type": "expression",
                                "value": "{{NOW}}",
                                "test": ""
                              },
                              {
                                "name": ":P6",
                                "type": "expression",
                                "value": "{{planEmployee.id}}",
                                "test": ""
                              }
                            ]
                          }
                        },
                        "meta": [
                          {
                            "name": "identity",
                            "type": "text"
                          },
                          {
                            "name": "affected",
                            "type": "number"
                          }
                        ]
                      },
                      {
                        "name": "updateClient",
                        "module": "dbupdater",
                        "action": "update",
                        "options": {
                          "connection": "EnyrgyDB",
                          "sql": {
                            "type": "update",
                            "values": [
                              {
                                "table": "client",
                                "column": "treatments",
                                "type": "number",
                                "value": "{{planEmployee.limitSessions}}"
                              }
                            ],
                            "table": "client",
                            "wheres": {
                              "condition": "AND",
                              "rules": [
                                {
                                  "id": "id",
                                  "field": "id",
                                  "type": "double",
                                  "operator": "equal",
                                  "value": "{{insertClient.identity}}",
                                  "data": {
                                    "column": "id"
                                  },
                                  "operation": "="
                                }
                              ],
                              "conditional": null,
                              "valid": true
                            },
                            "returning": "id",
                            "query": "update \"client\" set \"treatments\" = ? where \"id\" = ?",
                            "params": [
                              {
                                "name": ":P1",
                                "type": "expression",
                                "value": "{{planEmployee.limitSessions}}",
                                "test": ""
                              },
                              {
                                "operator": "equal",
                                "type": "expression",
                                "name": ":P2",
                                "value": "{{insertClient.identity}}",
                                "test": ""
                              }
                            ]
                          }
                        },
                        "meta": [
                          {
                            "name": "affected",
                            "type": "number"
                          }
                        ]
                      }
                    ]
                  },
                  "else": {
                    "steps": [
                      {
                        "name": "insertDetailsPayment",
                        "module": "dbupdater",
                        "action": "insert",
                        "options": {
                          "connection": "EnyrgyDB",
                          "sql": {
                            "type": "insert",
                            "values": [
                              {
                                "table": "detailsPayment",
                                "column": "status",
                                "type": "text",
                                "value": "{{createPlanEmployee.createSubscription.data.status}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "clientId",
                                "type": "number",
                                "value": "{{client.id}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "subscriptionStripeId",
                                "type": "text",
                                "value": "{{subscriptionId}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "createdAt",
                                "type": "datetime",
                                "value": "{{NOW}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "updatedAt",
                                "type": "datetime",
                                "value": "{{NOW}}"
                              },
                              {
                                "table": "detailsPayment",
                                "column": "planId",
                                "type": "number",
                                "value": "{{planEmployee.id}}"
                              }
                            ],
                            "table": "detailsPayment",
                            "returning": "id",
                            "query": "insert into \"detailsPayment\" (\"clientId\", \"createdAt\", \"planId\", \"status\", \"subscriptionStripeId\", \"updatedAt\") values (?, ?, ?, ?, ?, ?) returning \"id\"",
                            "params": [
                              {
                                "name": ":P1",
                                "type": "expression",
                                "value": "{{createPlanEmployee.createSubscription.data.status}}",
                                "test": ""
                              },
                              {
                                "name": ":P2",
                                "type": "expression",
                                "value": "{{client.id}}",
                                "test": ""
                              },
                              {
                                "name": ":P3",
                                "type": "expression",
                                "value": "{{subscriptionId}}",
                                "test": ""
                              },
                              {
                                "name": ":P4",
                                "type": "expression",
                                "value": "{{NOW}}",
                                "test": ""
                              },
                              {
                                "name": ":P5",
                                "type": "expression",
                                "value": "{{NOW}}",
                                "test": ""
                              },
                              {
                                "name": ":P6",
                                "type": "expression",
                                "value": "{{planEmployee.id}}",
                                "test": ""
                              }
                            ]
                          }
                        },
                        "meta": [
                          {
                            "name": "identity",
                            "type": "text"
                          },
                          {
                            "name": "affected",
                            "type": "number"
                          }
                        ]
                      },
                      {
                        "name": "updateClient",
                        "module": "dbupdater",
                        "action": "update",
                        "options": {
                          "connection": "EnyrgyDB",
                          "sql": {
                            "type": "update",
                            "values": [
                              {
                                "table": "client",
                                "column": "treatments",
                                "type": "number",
                                "value": "{{planEmployee.limitSessions.toNumber()+client.treatments.toNumber()}}"
                              }
                            ],
                            "table": "client",
                            "wheres": {
                              "condition": "AND",
                              "rules": [
                                {
                                  "id": "id",
                                  "field": "id",
                                  "type": "double",
                                  "operator": "equal",
                                  "value": "{{client.id}}",
                                  "data": {
                                    "column": "id"
                                  },
                                  "operation": "="
                                }
                              ],
                              "conditional": null,
                              "valid": true
                            },
                            "returning": "id",
                            "query": "update \"client\" set \"treatments\" = ? where \"id\" = ? returning \"id\"",
                            "params": [
                              {
                                "name": ":P1",
                                "type": "expression",
                                "value": "{{planEmployee.limitSessions.toNumber()+client.treatments.toNumber()}}",
                                "test": ""
                              },
                              {
                                "operator": "equal",
                                "type": "expression",
                                "name": ":P2",
                                "value": "{{client.id}}",
                                "test": ""
                              }
                            ]
                          }
                        },
                        "meta": [
                          {
                            "name": "affected",
                            "type": "number"
                          }
                        ]
                      }
                    ]
                  }
                },
                "outputType": "boolean"
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "response",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{message.USER_CREATED}}"
        },
        "meta": [],
        "outputType": "text",
        "output": true
      }
    ]
  }
}